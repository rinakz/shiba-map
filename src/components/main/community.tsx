import stls from "~styles/components/Main.module.sass";
import { useEffect, useRef, useState } from "react";
import { Button } from "@mui/material";
import { useNavigate } from "react-router";
import { LayoutPage } from "~components/general/layout-page";
import { PATH } from "~routes/path";
import { IconPawButton } from "~assets/icons/IconPawButton";
import Footer from "~components/footer/footer";

export default function Community() {
  const navigate = useNavigate();
  const [isVisible, setIsVisible] = useState(false);
  const elementRef = useRef<HTMLDivElement>(null); // –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞

  const handleScroll = () => {
    if (elementRef.current) {
      const position = elementRef?.current?.getBoundingClientRect();
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥–µ–Ω –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
      if (position.top < window.innerHeight && position.bottom >= 0) {
        setIsVisible(true);
        window.removeEventListener("scroll", handleScroll); // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
      }
    }
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll); // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    };
  }, []);

  return (
    <LayoutPage>
      <div
        style={{
          width: "100%",
          justifyContent: "space-between",
          display: "flex",
          flexDirection: "column",
        }}
      >
        <div
          ref={elementRef}
          style={{ width: "initial", height: "-webkit-fill-available" }}
          className={
            isVisible ? stls.servicesContainer : stls.servicesContainerHidden
          }
        >
          <div>
            <div className={stls.serviceTitle}>
              <h1 style={{ minWidth: "40%" }}>–í—Å–µ —Å–∏–±—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ!</h1>
              <img
                style={{
                  width: "-webkit-fill-available",
                  maxHeight: "280px",
                  maxWidth: "450px",
                }}
                src="speaking.png"
                alt="community"
              />
            </div>
            <p>
              üìå –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ª—é–±–∏—Ç–µ–ª–µ–π —Å–∏–±–∞-–∏–Ω—É!
              <br />
              <br />
              üìå –ù–∞—Ö–æ–¥–∏—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫—Ä–µ–ø–∫–∏–µ –¥—Ä—É–∂–µ—Å–∫–∏–µ —Å–≤—è–∑–∏
            </p>
          </div>
          <div className={stls.mainContainer}>
            <Button
              style={{
                position: "relative",
                margin: "60px 0 0 0",
                float: "right",
              }}
              onClick={() => navigate(PATH.Auth)}
              className={stls.button}
            >
              –ü–†–ò–°–û–ï–î–ò–ù–ò–¢–¨–°–Ø <IconPawButton />
            </Button>
          </div>
        </div>
        <Footer />
      </div>
    </LayoutPage>
  );
}
